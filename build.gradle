plugins {
    id 'application'
    id 'com.github.spotbugs' version '6.0.26'
    id 'io.github.sgtsilvio.gradle.proguard' version '0.7.0'
}

repositories {
    mavenCentral()
}

dependencies {
    spotbugs 'com.github.spotbugs:spotbugs:4.8.6'
    spotbugsPlugins 'com.mebigfatguy.fb-contrib:fb-contrib:7.6.8'
    proguardClasspath("com.guardsquare:proguard-base:7.6.0")
}

version = '1.0.0'

spotbugs {
    effort = com.github.spotbugs.snom.Effort.valueOf('MAX')
    reportLevel = com.github.spotbugs.snom.Confidence.valueOf('MEDIUM')
    reportsDir = file("$buildDir/reports/spotbugs")
    excludeFilter = file("spotbugs-exclude.xml")
}

sourceSets {
    main {
        java.srcDirs = ['src']
        resources.srcDirs = ['resources']
    }
}

java {
    toolchain {
        languageVersion = JavaLanguageVersion.of(21)
    }
}

application {
    mainClass = 'battleship.Entrypoint'
}

task fatJar(type: Jar) {
    dependsOn check
    from {
        configurations.runtimeClasspath.collect {
            it.isDirectory() ? it : zipTree(it)
        } 
    }
    manifest {
        attributes('Main-Class': application.mainClass)
    }
    duplicatesStrategy = DuplicatesStrategy.EXCLUDE
    preserveFileTimestamps = false
    reproducibleFileOrder = true
    includeEmptyDirs = false
    archiveClassifier = "all-in-one"
    with jar
}

task proguardedJar(type: io.github.sgtsilvio.gradle.proguard.ProguardTask) {
    addInput {
        classpath.from(tasks.fatJar)
    }

    addOutput {
        archiveFile.set(base.libsDirectory.file("${project.name}-${project.version}-all-in-one-proguarded.jar"))
    }

    jdkModules.add('java.base')
    jdkModules.add('java.desktop')
    jdkModules.add('java.logging')
    jdkModules.add('java.datatransfer')

    rules.addAll(file('battleship.pro').readLines())
}
